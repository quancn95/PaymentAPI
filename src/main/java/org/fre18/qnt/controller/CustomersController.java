/*
 * Created on 2018-09-27 ( Date ISO 2018-09-27 - Time 11:32:05 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package org.fre18.qnt.controller;

import java.util.List;

import org.fre18.qnt.entity.Customers;
import org.fre18.qnt.service.CustomersService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
 

 
 

@CrossOrigin(origins ="*", maxAge = 3600)	
@RestController
public class CustomersController {
	
	@Autowired
	CustomersService customersService;
	 
	
	@RequestMapping(value="/customer", method=RequestMethod.GET)
	@ResponseBody
	public Customers getCustomer() {
		// TODO Auto-generated method stub
		return customersService.getOne(1);
	}
	
	@RequestMapping(value="/customers", method=RequestMethod.GET)
	@ResponseBody
	public List<Customers> getCustomers() {
		// TODO Auto-generated method stub
		List<Customers> customers = customersService.findAll();
		return customers;
	}
	
	@RequestMapping(value="/customer", method=RequestMethod.POST,produces={MediaType.APPLICATION_JSON_VALUE})
	@ResponseBody
	public Customers addCustomers(@RequestBody Customers customers) {
		// TODO Auto-generated method stub
		return customersService.create(customers);
	}
	
	/*@RequestMapping(value="/Customers/{id}", method=RequestMethod.PUT,produces={MediaType.APPLICATION_JSON_VALUE})
	@ResponseBody
	public Customers updateCustomers(@PathVariable("id") int id, @RequestBody Customers customers) {
		// TODO Auto-generated method stub
		CustomersDaoImpl.updateCustomers(Customers);
		
		Customers cus = customersService.getOne(id);
		if(cus != null) {
			cus.set(Customers.getName_st());
			cus.setAge_st(Customers.getAge_st());
			cus.setClass_st(Customers.getClass_st());
			cus.setAddress_st(Customers.getAddress_st());
			
			customersService.update(cus);
		}
		
		return cus;
	}*/
	
	@RequestMapping(value="/customer/{id}", method=RequestMethod.DELETE,produces={MediaType.APPLICATION_JSON_VALUE})
	@ResponseBody
	public Customers deleteCustomers(@PathVariable("id") int id){
		System.out.println("Delete" + id);
		/*CustomersDaoImpl.deleteCustomers(no); */
		Customers cus = customersService.getOne(id);
		if(cus != null) {
			customersService.delete(id);
		}
		
		return cus;
	}
	
}